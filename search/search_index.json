{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"IBM Sterling Devops Ansible","text":"<p>IBM Sterling Devops Project is an open source project to deploy IBM Sterling Products and other resources directly from the command line.</p> <p>Developed in Ansible, it provides a collection of playbooks and roles that automated deploy for IBM Sterling B2Bi, IBM Connect:Direct, ... on Redhat OpenShift.</p> <p>GitHub Repository: https://github.com/ibm-sterling-devops/ansible-ibm-sterling/</p> <p>Requirements</p> <p>To use ansible scripts you must have ansible, kubectl, oc, git, helm installed. See requirements on navigation.</p> <p>Current playbooks:</p> <p>Deploy Sterling Products on Redhat OpenShift / Kubernetes</p> <ul> <li>Deploy IBM Sterling Connect:Direct</li> <li>Deploy IBM Sterling Connect:Direct Web Service</li> <li>Deploy IBM Sterling B2B Integrator</li> <li>Deploy IBM Sterling Control Center Director/Monitor</li> <li>Deploy IBM Sterling External Authentication Server</li> <li>Deploy IBM Sterling Secure Proxy Server (Engine, Configuration Manager, Perimeter)</li> <li>Deploy IBM Sterling Partner Engagement Manager Essentials</li> <li>Deploy IBM Sterling Partner Engagement Manager Standard</li> <li>Deploy IBM Sterling Transformation Server</li> <li>Deploy IBM Sterling Transformation Extender Advanced</li> </ul> <p>Install Sterling Products (standalone)</p> <ul> <li>Install Connect:Direct (standalone)</li> <li>Install Sterling B2B Integrator (standalone)</li> </ul> <p>Contributors</p> <p>See the list of contributors who participated in this project.</p> <p>License</p> <p>This project is licensed under the Eclipse Public License - v 2.0 - see the LICENSE file for details</p> <p>Disclaimer</p> <p>This repository is a community-driven projects and is not officially supported or endorsed by IBM. While members of the community may include IBM employees, this project is independent of IBM's official support channels. Please note that any contributions, issues, or inquiries regarding this repository should be directed to the community maintainers and not to IBM's support teams. We appreciate your understanding and participation in this community-driven initiative.</p> <p>This code can be used as is. And any feedback will be welcome. We does not make any warranty about the completeness, reliability and accuracy of this code. Any action you take by using this code is strictly at your own risk, and this project will not be liable for any losses and damages in connection with the use of this code.</p>"},{"location":"all_roles/","title":"All roles","text":"<ul> <li>cd_deploy</li> <li>cdws_deploy</li> <li>itx_rs_deploy</li> <li>itxa_deploy</li> <li>itxa_deploy_db2</li> <li>itxa_setup_db2</li> <li>sb2bi_deploy</li> <li>sb2bi_deploy_db2</li> <li>sb2bi_deploy_mq</li> <li>sb2bi_prebuiltdb_db2</li> <li>sb2bi_setup_db2</li> <li>scc_deploy</li> <li>scc_deploy_db2</li> <li>scc_deploy_mq</li> <li>scc_setup_db2</li> <li>seas_deploy</li> <li>ssp_cm_deploy</li> <li>ssp_config</li> <li>ssp_deploy</li> <li>ssp_ps_deploy</li> </ul>"},{"location":"all_roles/#roles-tools","title":"Roles: Tools","text":"<ul> <li>cert_manager</li> <li>cloudbeaver</li> <li>kafka</li> <li>kowl</li> <li>minio</li> <li>openldap</li> <li>phpldapadmin</li> </ul>"},{"location":"requirements-macos/","title":"Installation Guide for kubectl, oc, git, helm and ansible on MacOS","text":""},{"location":"requirements-macos/#install-kubectl","title":"Install kubectl","text":"<ol> <li>Install with Homebrew:</li> </ol> <pre><code>brew install kubectl git openshift-cli ansible\n</code></pre>"},{"location":"requirements-macos/#verify","title":"Verify","text":"<ol> <li>Verify the installation:</li> </ol> <pre><code>git --version\n</code></pre> <ol> <li>Verify the installation:</li> </ol> <pre><code>oc version\n</code></pre> <ol> <li>Verify the installation:</li> </ol> <pre><code>kubectl version\n</code></pre> <ol> <li>Verify the installation:</li> </ol> <pre><code>ansible --version\n</code></pre> <ol> <li>Verify the installation:</li> </ol> <pre><code>helm --version\n</code></pre> <ol> <li>Verify the installation:</li> </ol> <pre><code>keytool\n</code></pre>"},{"location":"requirements-rh/","title":"Installation Guide for kubectl, oc, git, helm and ansible on Redhat Linux/Fedora/CentOS","text":""},{"location":"requirements-rh/#install-kubectl-and-oc","title":"Install kubectl and oc","text":"<ol> <li>Download the latest release:</li> </ol> <pre><code>curl -LO \"https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest/openshift-client-linux.tar.gz\"\n</code></pre> <ol> <li>Extract the tar file:</li> </ol> <pre><code>tar -xzvf openshift-client-linux.tar.gz\n</code></pre> <ol> <li>Move the binaries to your PATH:</li> </ol> <pre><code>chmod +x oc \nchmod +x kubectl\n\nsudo mv oc kubectl /usr/local/bin/\n</code></pre>"},{"location":"requirements-rh/#install-helm","title":"Install helm","text":"<ol> <li>Download the latest release:</li> </ol> <pre><code>curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3\n$ chmod 700 get_helm.sh\n$ ./get_helm.sh\n</code></pre>"},{"location":"requirements-rh/#install-git-ansible-python3-pip-java-keytool","title":"Install git, ansible, , python3-pip, java (keytool)","text":"<ol> <li>Install the dependencies:</li> </ol> <pre><code>sudo dnf install -y ansible-core python3.12 python3.12-pip java-1.8.0-openjdk.x86_64\n</code></pre> <ol> <li>Change default python in </li> </ol> <pre><code>sudo alternatives --install /usr/bin/python3 python3 /usr/bin/python3.12 1\nsudo alternatives --set python3 /usr/bin/python3.12\n</code></pre> <ol> <li>Install Python Libraries</li> </ol> <pre><code>pip3 install kubernetes requests\n</code></pre> <ol> <li>Install kubernetes.core module</li> </ol> <pre><code>ansible-galaxy collection install kubernetes.core\n</code></pre>"},{"location":"requirements-rh/#verify","title":"Verify","text":"<ol> <li>Verify the installation:</li> </ol> <pre><code>git --version\n</code></pre> <ol> <li>Verify the installation:</li> </ol> <pre><code>oc version\n</code></pre> <ol> <li>Verify the installation:</li> </ol> <pre><code>kubectl version\n</code></pre> <ol> <li>Verify the installation:</li> </ol> <pre><code>ansible --version\n</code></pre> <ol> <li>Verify the installation:</li> </ol> <pre><code>helm --version\n</code></pre> <ol> <li>Verify the installation:</li> </ol> <pre><code>keytool\n</code></pre>"},{"location":"requirements-ubuntu/","title":"Installation Guide for kubectl, oc, git, helm and ansible on Ubuntu/Debian","text":""},{"location":"requirements-ubuntu/#install-packages","title":"Install Packages","text":"<ol> <li>Update and install packages</li> </ol> <pre><code>sudo apt -y update\nsudo apt -y upgrade\n</code></pre> <ol> <li>Install packages</li> </ol> <pre><code>sudo apt -y install ansible git openjdk-17-jre-headless python3-pip python3-kubernetes python3-requests python3-yaml\n</code></pre> <ol> <li>Install kubectl and oc</li> </ol> <pre><code>curl -LO \"https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest/openshift-client-linux.tar.gz\"\n\ntar -xzvf openshift-client-linux.tar.gz\n\nchmod +x oc \nchmod +x kubectl\n\nsudo mv oc kubectl /usr/local/bin/\n</code></pre> <ol> <li>Install ansible kubernetes.core </li> </ol> <pre><code>ansible-galaxy collection install kubernetes.core\n</code></pre>"},{"location":"requirements-ubuntu/#install-git-ansible-helm","title":"Install git, ansible, helm","text":"<ol> <li>Add the Helm dependencies:</li> </ol> <pre><code>curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg &gt; /dev/null\nsudo apt install apt-transport-https --yes\necho \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main\" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list\n\nsudo apt update\nsudo apt install helm\n</code></pre>"},{"location":"requirements-ubuntu/#verify","title":"Verify","text":"<ol> <li>Verify the installation:</li> </ol> <pre><code>git --version\n</code></pre> <ol> <li>Verify the installation:</li> </ol> <pre><code>oc version\n</code></pre> <ol> <li>Verify the installation:</li> </ol> <pre><code>kubectl version\n</code></pre> <ol> <li>Verify the installation:</li> </ol> <pre><code>ansible --version\n</code></pre> <ol> <li>Verify the installation:</li> </ol> <pre><code>helm --version\n</code></pre> <ol> <li>Verify the installation:</li> </ol> <pre><code>keytool\n</code></pre>"},{"location":"requirements-windows/","title":"Installation Guide for kubectl, oc, git, helm and ansible on MS Windows using WSL","text":""},{"location":"requirements-windows/#install-wsl","title":"Install WSL","text":"<ol> <li>Open PowerShell as Administrator and run:</li> </ol> <pre><code>wsl --install\n</code></pre> <p>WSL will install a Ubuntu Linux distribution.</p> <ol> <li>Restart your computer if prompted.</li> </ol>"},{"location":"requirements-windows/#set-up-wsl","title":"Set up WSL","text":"<ol> <li>Open WSL application, and provide default user and password</li> </ol> <pre><code>Ubuntu is already installed.\nStarting Ubuntu...\n...\nEnter new UNIX username: demo\nNew password:\nRetype new password:\npasswd: password updated successfully\n</code></pre>"},{"location":"requirements-windows/#install-packages","title":"Install Packages","text":"<ol> <li>Update and install packages</li> </ol> <pre><code>sudo apt -y update\nsudo apt -y upgrade\n</code></pre> <ol> <li>Install packages</li> </ol> <pre><code>sudo apt -y install ansible git openjdk-17-jre-headless python3-pip python3-kubernetes python3-requests python3-yaml\n</code></pre> <ol> <li>Install kubectl and oc</li> </ol> <pre><code>curl -LO \"https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest/openshift-client-linux.tar.gz\"\n\ntar -xzvf openshift-client-linux.tar.gz\n\nchmod +x oc \nchmod +x kubectl\n\nsudo mv oc kubectl /usr/local/bin/\n</code></pre> <ol> <li>Install ansible kubernetes.core </li> </ol> <pre><code>ansible-galaxy collection install kubernetes.core\n</code></pre>"},{"location":"requirements-windows/#install-git-ansible-helm","title":"Install git, ansible, helm","text":"<ol> <li>Add the Helm dependencies:</li> </ol> <pre><code>curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg &gt; /dev/null\nsudo apt install apt-transport-https --yes\necho \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main\" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list\n\nsudo apt update\nsudo apt install helm\n</code></pre>"},{"location":"requirements-windows/#verify","title":"Verify","text":"<ol> <li>Verify the installation:</li> </ol> <pre><code>git --version\n</code></pre> <ol> <li>Verify the installation:</li> </ol> <pre><code>oc version\n</code></pre> <ol> <li>Verify the installation:</li> </ol> <pre><code>kubectl version\n</code></pre> <ol> <li>Verify the installation:</li> </ol> <pre><code>ansible --version\n</code></pre> <ol> <li>Verify the installation:</li> </ol> <pre><code>helm --version\n</code></pre> <ol> <li>Verify the installation:</li> </ol> <pre><code>keytool\n</code></pre>"},{"location":"others/known_problems/","title":"Known problems","text":""},{"location":"others/known_problems/#sterling-b2bi-in-multizone-environments-on-ibm-cloud","title":"Sterling B2Bi in Multizone Environments on IBM Cloud","text":"<p>The ibmc-file-gold-gid StorageClass is not compatible with multizone environments. The following error will happen when you try to provide environment</p> <pre><code>failed to provision volume with StorageClass \"ibmc-file-gold-gid\": GID allocation not supported on Multi-Zone Cluster [Multi-Zone Cluster: Zones\n</code></pre> <p>You can modify the ansible-ibm-sterling scripts to use the ibmc-file-gold StorageClass, but this will result in the following error:</p> <pre><code>mkdir: cannot create directory '/ibm/trace/logs': Permission denied\nchown: cannot access '/ibm/trace/logs/dbSetup': No such file or directory\n</code></pre> <p>This error occurs because the ibmc-file-gold StorageClass requires the container to run as root.</p> <p>If you need to deploy Sterling B2Bi in a multizone RHOCP, you can adjust the scripts to use ibmc-file-gold by modifying the file:</p> <pre><code>roles/sb2b_deploy/defaults/main.yaml\n</code></pre> <p>and changing the storage_class to ibm-file-gold, then proceed with the deploy. However, the ac, api, and asi pods will not reach the \"ready\" state and will restart.</p> <p>To resolve this issue, create a pod to fix the permissions.</p> <pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: fix-permission\n  namespace: sterling-b2bi-poc01-app\nspec:\n  containers:\n    - name: fix-permission\n      image: 'busybox'\n      command: ['sh','-c']\n      args: ['chmod 777 /ibm/trace']\n      volumeMounts:\n        - name: logs\n          mountPath: /ibm/trace\n  volumes:\n    - name: logs\n      persistentVolumeClaim:\n        claimName: s0-b2bi-logs\n</code></pre> <p>Don't forget to change namespace. After ac, api and asi pods become ready, you delete this pod.</p>"},{"location":"others/known_problems/#connectdirect-versions-6300_ifix016-and-helm-version-131","title":"Connect:Direct Versions: 6.3.0.0_ifix016 and Helm Version: 1.3.1","text":"<pre><code>  SPCLI&gt; SPCG760E rc=8 CMS KeyStore open exception - Invalid KeyStore Format..\n  [2024/03/18 17:30:42.46 ] | [ERROR] | Failure in generating self-signed certificate with RC=8. Line no: 221\n</code></pre> <p>In IBM Cloud, the StorageClass of the ReadWriteOnce type, which is requested in the values.yaml of the Helm chart, is ibmc-block-gold.</p> <p>But when using this storageClass I had permission problems. When changing to the ibmc-file-gold and/or ibmc-file-gold-gid storageClass, I had no problems running C:D in Container, both storageClasses are of the ReadWriteMany type.</p>"},{"location":"playbooks/deploy_ocp_cd/","title":"Deploy IBM Sterling Connect:Direct on OpenShift using Ansible Scripts","text":"<p>Playbook will run the last version of Connect:Direct, but take care of Kubernetes/Openshift version is supported</p> Connect:Direct OpenShift Kubernetes helm-chart 6.4.0.1_iFix029 &gt;= 4.14 and &lt;= 4.18 &gt;=1.27.0 &lt;1.32.0 1.4.4 6.4.0.1_iFix018 &gt;= 4.14 and &lt;= 4.18 &gt;=1.27.0 &lt;1.32.0 1.4.3 6.4.0.1_iFix001 &gt;= 4.14 and &lt;= 4.18 &gt;=1.27.0 &lt;1.32.0 1.4.2 6.3.0.3_ifix025 &gt;= 4.11 and &lt;= 4.16 &gt;=1.24.0 &lt;1.30.0 1.3.13 6.3.0.3_ifix021 &gt;= 4.11 and &lt;= 4.16 &gt;=1.24.0 &lt;1.30.0 1.3.12 6.3.0.3_ifix014 &gt;= 4.11 and &lt;= 4.16 &gt;=1.24.0 &lt;1.30.0 1.3.11"},{"location":"playbooks/deploy_ocp_cd/#preparation","title":"Preparation","text":""},{"location":"playbooks/deploy_ocp_cd/#1-ibm-entitled-registry","title":"1. IBM Entitled Registry","text":"<p>You must have kubectl, oc, git and ansible installed in your machine</p> <p>Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key. With key export variable</p> <pre><code>export ENTITLED_REGISTRY_KEY=&lt;entitlement_key&gt;\n</code></pre>"},{"location":"playbooks/deploy_ocp_cd/#2-login-on-openshift","title":"2. Login on OpenShift","text":"<p>Do a login in Openshift console and run the command:</p> <pre><code>oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234\n</code></pre>"},{"location":"playbooks/deploy_ocp_cd/#3-cloning-ansible-ibm-sterling-from-git","title":"3. Cloning ansible-ibm-sterling from git","text":"<pre><code>git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git\n</code></pre>"},{"location":"playbooks/deploy_ocp_cd/#4-set-roles-path","title":"4. Set roles path","text":"<p>To run playbook the playbook</p> <pre><code>cd ansible-ibm-sterling\n\nexport ANSIBLE_CONFIG=./ansible.cfg \n</code></pre>"},{"location":"playbooks/deploy_ocp_cd/#deploy-you-connectdirect","title":"Deploy you Connect:Direct","text":"<p>1) Define C:D node name</p> <pre><code>export CD_NODENAME=CDNODE01\n</code></pre> <p>2) To run the playbook</p> <pre><code>ansible-playbook playbooks/deploy_cd.yml\n</code></pre> <p>check for sterling-cdnode01-dev namespace. The C:D node name will be CDNODE01</p>"},{"location":"playbooks/deploy_ocp_cd/#examples","title":"Examples","text":""},{"location":"playbooks/deploy_ocp_cd/#example-1-change-namespace-and-cd-node-name","title":"Example 1: Change namespace and C:D node name","text":"<p>To change namespace/project and C:D node name</p> <pre><code>cd ansible-ibm-sterling\n\nexport CD_NAMESPACE=sterling-cdcompany01-prod\nexport CD_NODENAME=COMPANY01\n\nansible-playbook playbooks/deploy_cd.yml\n</code></pre>"},{"location":"playbooks/deploy_ocp_cd/#environment-variable","title":"Environment Variable","text":"<p>For all environment variables</p>"},{"location":"playbooks/deploy_ocp_cd/#role-variables","title":"Role Variables","text":"<p>Environment variables for this role:</p> Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY - Yes Entitlement registry key CD_NAMESPACE sterling-cdnode01-dev No Namespace for C:D application CD_NODENAME CDNODE01 No Specify the nodename of C:D CD_VERSION 6.4.0.1_iFix029 No Version of C:D container to deploy CD_ADMINPASSWORD passw0rd No Password for C:D Admin CD_APPUSER_PWD passw0rd No Password for C:D User CD_LOCALCERTPASSPHRASE changeit No Passphrase for local certificate CD_KEYSTOREPASSWORD changeit No Password for keystore CD_LICENSE_TYPE non-prod No License type for C:D (prod or non-prod) CD_STORAGE_CLASS - No Storage class to be used for the container CD_STORAGE_CAPACITY 1Gi No Storage capacity to be allocated to the container CD_CPU_LIMITS 500m No CPU limit for the container CD_MEM_LIMITS 2000Mi No Memory limit for the container CD_EPHEMERAL_STORAGE_LIMITS 5Gi No Ephemeral storage limit for the container CD_CPU_REQUESTS 500m No CPU request for the container CD_MEM_REQUESTS 2000Mi No Memory request for the container CD_EPHEMERAL_STORAGE_REQUESTS 3Gi No Ephemeral storage request for the container"},{"location":"playbooks/deploy_ocp_cdws/","title":"Deploy IBM Sterling Connect:Direct WebService on OpenShift using Ansible Scripts","text":"<p>Playbook will run the last version of Connect:Direct WebService, but take care of Kubernetes/Openshift version is supported</p> C:D WebService OpenShift Kubernetes helm-chart 6.4.0.2_ifix000 &gt;= 4.14 and &lt;= 4.18 &gt;=1.27.0 &lt;1.32.0 1.1.5 6.4.0.0_ifix000 &gt;= 4.14 and &lt;= 4.16 &gt;=1.27.0 &lt;1.30.0 1.1.0 6.3.0.11_ifix000 &gt;= 4.14 and &lt;= 4.16 &gt;=1.27.0 &lt;1.30.0 1.0.4 6.3.0.9_ifix000 &gt;= 4.14 and &lt;= 4.16 &gt;=1.27.0 &lt;1.30.0 1.0.2"},{"location":"playbooks/deploy_ocp_cdws/#preparation","title":"Preparation","text":""},{"location":"playbooks/deploy_ocp_cdws/#1-ibm-entitled-registry","title":"1. IBM Entitled Registry","text":"<p>You must have kubectl, oc, git and ansible installed in your machine</p> <p>Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key. With key export variable</p> <pre><code>export ENTITLED_REGISTRY_KEY=&lt;entitlement_key&gt;\n</code></pre>"},{"location":"playbooks/deploy_ocp_cdws/#2-login-on-openshift","title":"2. Login on OpenShift","text":"<p>Do a login in Openshift console and run the command:</p> <pre><code>oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234\n</code></pre>"},{"location":"playbooks/deploy_ocp_cdws/#3-cloning-ansible-ibm-sterling-from-git","title":"3. Cloning ansible-ibm-sterling from git","text":"<pre><code>git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git\n</code></pre>"},{"location":"playbooks/deploy_ocp_cdws/#4-set-roles-path","title":"4. Set roles path","text":"<p>To run playbook the playbook</p> <pre><code>cd ansible-ibm-sterling\n\nexport ANSIBLE_CONFIG=./ansible.cfg \n</code></pre>"},{"location":"playbooks/deploy_ocp_cdws/#deploy-you-connectdirect-webservice","title":"Deploy you Connect:Direct WebService","text":"<p>1) To run the playbook</p> <pre><code>ansible-playbook playbooks/deploy_cdws.yml\n</code></pre> <p>check for sterling-cdws01 namespace in Kubernetes/Openshift console.</p>"},{"location":"playbooks/deploy_ocp_cdws/#after-install","title":"After install","text":"<p>Open you project</p> <p></p> <p>Go to Routes and click on the link at right side</p> <p></p> <p>add the context below at the end of url</p> <pre><code>/cdws-ui/login\n</code></pre> <p>Click on Admin tab</p> <p></p> <p>Provided Admin password:</p> <ul> <li>User: admin</li> <li>Password: admin</li> </ul> <p>Change the Admin password.</p>"},{"location":"playbooks/deploy_ocp_cdws/#examples","title":"Examples","text":""},{"location":"playbooks/deploy_ocp_cdws/#example-1-change-namespace-and-cd-node-name","title":"Example 1: Change namespace and C:D node name","text":"<p>To change namespace/project and C:D node name</p> <pre><code>cd ansible-ibm-sterling\n\nexport CDWS_NAMESPACE=sterling-cdws01\n\nansible-playbook playbooks/deploy_cd.yml\n</code></pre>"},{"location":"playbooks/deploy_ocp_cdws/#environment-variable","title":"Environment Variable","text":"<p>Environment variables for this role:</p> Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key CDWS_NAMESPACE sterling-cdws01 Yes Namespace for C:D application CDWS_VERSION 6.4.0.2_ifix000 No Version of C:D container to deploy CDWS_TRUSTSTOREPASSWORD Change1t@ No Password for truststore CDWS_KEYSTOREPASSWORD Change1t@ No Password for keystore CDWS_CACERT_PASSWORD Password123! No Password for CA certificate CDWS_LICENSE_TYPE non-prod No License type for C:D application (prod or non-prod) CDWS_STORAGE_CLASS - Yes Storage class to be used for the container CDWS_STORAGE_CAPACITY 500Mi No Storage capacity to be allocated to the container CDWS_CPU_LIMITS 3000m No CPU limit for the container CDWS_MEM_LIMITS 2Gi No Memory limit for the container CDWS_CPU_REQUESTS 1500m No CPU request for the container CDWS_MEM_REQUESTS 1Gi No Memory request for the container"},{"location":"playbooks/deploy_ocp_itx_rs/","title":"Deploy IBM Sterling Transformation Extender on OpenShift using Ansible Scripts","text":"<p>Playbook will run the last version of ITXA, but take care of Kubernetes/Openshift version is supported</p> ITX RS OpenShift Kubernetes helm-chart 10.1.2.0.20231130 &gt;= 4.13 and &lt;= 4.15 &gt;=1.26.0 &lt;1.29.0 2.1.0"},{"location":"playbooks/deploy_ocp_itx_rs/#preparation","title":"Preparation","text":""},{"location":"playbooks/deploy_ocp_itx_rs/#1-ibm-entitled-registry","title":"1. IBM Entitled Registry","text":"<p>You must have kubectl, oc, git and ansible installed in your machine</p> <p>Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key. With key export variable</p> <pre><code>export ENTITLED_REGISTRY_KEY=&lt;entitlement_key&gt;\n</code></pre>"},{"location":"playbooks/deploy_ocp_itx_rs/#2-login-on-openshift","title":"2. Login on OpenShift","text":"<p>Do a login in Openshift console and run the command:</p> <pre><code>oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234\n</code></pre>"},{"location":"playbooks/deploy_ocp_itx_rs/#3-cloning-ansible-ibm-sterling-from-git","title":"3. Cloning ansible-ibm-sterling from git","text":"<pre><code>git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git\n</code></pre>"},{"location":"playbooks/deploy_ocp_itx_rs/#4-set-roles-path","title":"4. Set roles path","text":"<p>To run playbook the playbook</p> <pre><code>cd ansible-ibm-sterling\n\nexport ANSIBLE_CONFIG=./ansible.cfg \n</code></pre>"},{"location":"playbooks/deploy_ocp_itx_rs/#deploy-itx-rs","title":"Deploy ITX RS","text":"<p>1) Define namespace</p> <pre><code>export ITX_RS_NAMESPACE=ibm-itx-rs-dev01\n</code></pre> <p>2) To run the playbook</p> <pre><code>ansible-playbook playbooks/deploy_itx_rs.yml\n</code></pre>"},{"location":"playbooks/deploy_ocp_itx_rs/#environment-variable","title":"Environment Variable","text":"<p>Environment variables for this role:</p> Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key ITX_RS_NAMESPACE N/A Yes Namespace for ITX application ITX_RS_INSTANCEID N/A Yes Instance ID for ITX application ITX_RS_VERSION 10.1.2.0.20231130 No Version of ITX application ITX_RS_SYS_PASSPHRASE Passw0rd@ No System passphrase for ITX application"},{"location":"playbooks/deploy_ocp_itxa/","title":"Deploy IBM Sterling Transformation Server on OpenShift using Ansible Scripts","text":"<p>Playbook will run the last version of ITXA, but take care of Kubernetes/Openshift version is supported</p> ITXA OpenShift Kubernetes helm-chart 10.0.1.10-x86_64 &gt;= 4.13 and &lt;= 4.15 &gt;=1.26.0 &lt;1.29.0 1.0.4 10.0.1.9-x86_64 &gt;= 4.13 and &lt;= 4.15 &gt;=1.26.0 &lt;1.29.0 1.0.2"},{"location":"playbooks/deploy_ocp_itxa/#preparation","title":"Preparation","text":""},{"location":"playbooks/deploy_ocp_itxa/#1-ibm-entitled-registry","title":"1. IBM Entitled Registry","text":"<p>You must have kubectl, oc, git and ansible installed in your machine</p> <p>Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key. With key export variable</p> <pre><code>export ENTITLED_REGISTRY_KEY=&lt;entitlement_key&gt;\n</code></pre>"},{"location":"playbooks/deploy_ocp_itxa/#2-login-on-openshift","title":"2. Login on OpenShift","text":"<p>Do a login in Openshift console and run the command:</p> <pre><code>oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234\n</code></pre>"},{"location":"playbooks/deploy_ocp_itxa/#3-cloning-ansible-ibm-sterling-from-git","title":"3. Cloning ansible-ibm-sterling from git","text":"<pre><code>git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git\n</code></pre>"},{"location":"playbooks/deploy_ocp_itxa/#4-set-roles-path","title":"4. Set roles path","text":"<p>To run playbook the playbook</p> <pre><code>cd ansible-ibm-sterling\n\nexport ANSIBLE_CONFIG=./ansible.cfg \n</code></pre>"},{"location":"playbooks/deploy_ocp_itxa/#deploy-itxa","title":"Deploy ITXA","text":"<p>1) First you need to provide ITXA_INSTANCEID, this is used to define your environment. Samples: dev01, dev02, poc01, qa01, prod01</p> <pre><code>export ITXA_INSTANCEID=dev01\n</code></pre> <p>2) To run the playbook</p> <pre><code>ansible-playbook playbooks/deploy_itxa.yml\n</code></pre>"},{"location":"playbooks/deploy_ocp_itxa/#environment-variable","title":"Environment Variable","text":"<p>Environment variables for this role:</p> Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key ITXA_INSTANCEID N/A Yes Instance ID for ITXA application ITXA_VERSION 10.0.1.9-x86_64 No Version of ITXA application ITXA_ADMIN_PASSWORD passw0rd No Admin password for ITXA application ITXA_TLS_KEYSTORE_PASSWORD changeit No TLS keystore password for ITXA application ITXA_LICENSETYPE non-prod No License type for ITXA application (prod or non-prod)"},{"location":"playbooks/deploy_ocp_pem_essentials/","title":"Deploy IBM Sterling Partner Engagement Manager on RedHat OpenShift","text":"<p>Playbook will run the last version of IBM Sterling Partner Engagement Manager, but take care of Kubernetes/Openshift version is supported</p> Sterling PEM OpenShift Kubernetes helm-chart 6.2.4.0.1_standard &gt;= 4.14 &gt;= 1.27 1.4.2 6.2.4_standard &gt;= 4.14 &gt;= 1.27 1.4.0 6.2.3.2 &gt;= 4.14 &gt;= 1.27 1.3.2"},{"location":"playbooks/deploy_ocp_pem_essentials/#deploying-sterling-pem-essentials","title":"Deploying Sterling PEM Essentials","text":""},{"location":"playbooks/deploy_ocp_pem_essentials/#1-ibm-entitled-registry","title":"1. IBM Entitled Registry","text":"<p>You must have kubectl, oc, git and ansible installed in your machine</p> <p>Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key. With key export variable</p> <pre><code>export ENTITLED_REGISTRY_KEY=&lt;entitlement_key&gt;\n</code></pre>"},{"location":"playbooks/deploy_ocp_pem_essentials/#2-login-on-openshift","title":"2. Login on OpenShift","text":"<p>Do a login in Openshift console and run the command:</p> <pre><code>oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234\n</code></pre>"},{"location":"playbooks/deploy_ocp_pem_essentials/#3-cloning-ansible-ibm-sterling-from-git","title":"3. Cloning ansible-ibm-sterling from git","text":"<pre><code>git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git\n</code></pre>"},{"location":"playbooks/deploy_ocp_pem_essentials/#4-set-roles-path","title":"4. Set roles path","text":"<p>To run playbook the playbook</p> <pre><code>cd ansible-ibm-sterling\n\nexport ANSIBLE_CONFIG=./ansible.cfg \n</code></pre>"},{"location":"playbooks/deploy_ocp_pem_essentials/#5-deploying-sterling-pem-essentials","title":"5. Deploying Sterling PEM Essentials","text":"<p>1) First you need to provide PEM_INSTANCEID, this is used to define your environment. Samples: dev01, dev02, poc01, qa01, prod01</p> <pre><code>export PEM_INSTANCEID=dev01\n</code></pre> <p>2) To run playbook the playbook</p> <pre><code>ansible-playbook playbooks/deploy_pem_essentials.yml\n</code></pre>"},{"location":"playbooks/deploy_ocp_pem_essentials/#environment-variable","title":"Environment Variable","text":"<p>Environment variables for this role:</p> Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY Yes IBM Entitled Registry key PEM_INSTANCEID Yes Used to define your environment PEM_ACTION install No Action: install, upgrade, prebuiltdb PEM_DEFAULT_PASSWORD Password123! No Default Password for PEM applications PEM_DEFAULT_PASSPHRASE P@ssPhr4s3_890@ No Default Passphrase for PEM applications PEM_KEYSTORE_PASSWORD Change1t@ No Default Password for Keystores and Truststore PEM_ADMIN_MAILADDR admin@company.com No Provide the admin email address PEM_SMTPHOST smtp.company.com No Provide the SMTP host details PEM_SMTPPORT 25 No Provide the SMTP host details PEM_DBVENDOR DB2 No Database vendor: DB2, Oracle, MSSQL PEM_DBHOST No Database hostname/ip address PEM_DBPORT No Database port PEM_DBNAME PEMDB No Database name PEM_DBUSER db2inst1 No Database user PEM_DBPASSWORD passw0rd No Database user password PEM_DBSCHEMA DB2INST1 No Database user password PEM_JMS_USERNAME No JMS Queue user PEM_JMS_PASSWORD passw0rd No JMS Queue user password PEM_JMS_KEYSTORE_PASSWORD No JMS Queue keystore password PEM_JMS_TRUSTSTORE_PASSWORD No JMS Queue truststore password PEM_SKIP_HELM false No Avoid to run helm, only generate values.yaml PEM_CM_ENABLE false No Enable/Disable PEM Community Manager <p>For all environment variables</p> <ul> <li>Role pem_std_setup_db2</li> <li>Role pem_std_deploy_db2</li> <li>Role pem_std_deploy_mq</li> </ul>"},{"location":"playbooks/deploy_ocp_pem_standard/","title":"Deploy IBM Sterling Partner Engagement Manager on RedHat OpenShift","text":"<p>Playbook will run the last version of IBM Sterling Partner Engagement Manager, but take care of Kubernetes/Openshift version is supported</p> Sterling PEM OpenShift Kubernetes helm-chart 6.2.4.0.1_standard &gt;= 4.14 &gt;= 1.27 1.4.2 6.2.4_standard &gt;= 4.14 &gt;= 1.27 1.4.0 6.2.3.2 &gt;= 4.14 &gt;= 1.27 1.3.2"},{"location":"playbooks/deploy_ocp_pem_standard/#deploying-sterling-pem-standard","title":"Deploying Sterling PEM Standard","text":""},{"location":"playbooks/deploy_ocp_pem_standard/#1-ibm-entitled-registry","title":"1. IBM Entitled Registry","text":"<p>You must have kubectl, oc, git and ansible installed in your machine</p> <p>Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key. With key export variable</p> <pre><code>export ENTITLED_REGISTRY_KEY=&lt;entitlement_key&gt;\n</code></pre>"},{"location":"playbooks/deploy_ocp_pem_standard/#2-login-on-openshift","title":"2. Login on OpenShift","text":"<p>Do a login in Openshift console and run the command:</p> <pre><code>oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234\n</code></pre>"},{"location":"playbooks/deploy_ocp_pem_standard/#3-cloning-ansible-ibm-sterling-from-git","title":"3. Cloning ansible-ibm-sterling from git","text":"<pre><code>git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git\n</code></pre>"},{"location":"playbooks/deploy_ocp_pem_standard/#4-set-roles-path","title":"4. Set roles path","text":"<p>To run playbook the playbook</p> <pre><code>cd ansible-ibm-sterling\n\nexport ANSIBLE_CONFIG=./ansible.cfg \n</code></pre>"},{"location":"playbooks/deploy_ocp_pem_standard/#5-deploying-sterling-pem-with-community-manager","title":"5. Deploying Sterling PEM with Community Manager","text":"<p>1) Deploy Serling B2Bi</p> <p>You need to provide to install a production Sterling B2Bi</p> <pre><code>export SI_INSTANCEID=prod01\n\nansible-playbook playbooks/deploy_sb2b.yml\n</code></pre> <p>You need to provide to install a non-production Sterling B2Bi</p> <pre><code>export SI_INSTANCEID=dev01\n\nansible-playbook playbooks/deploy_sb2b.yml\n</code></pre> <p>After install change admin password to 'Password123!'</p> <p>2) Now you need to provide PEM_INSTANCEID and PEM_CM_ENABLE</p> <pre><code>export PEM_INSTANCEID=dev01\nexport PEM_CM_ENABLE=true\n</code></pre> <p>3) To run playbook the playbook</p> <pre><code>ansible-playbook playbooks/deploy_pem_standard.yml\n</code></pre>"},{"location":"playbooks/deploy_ocp_pem_standard/#environment-variable","title":"Environment Variable","text":"<p>Environment variables for this role:</p> Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY Yes IBM Entitled Registry key PEM_INSTANCEID Yes Used to define your environment PEM_ACTION install No Action: install, upgrade, prebuiltdb PEM_DEFAULT_PASSWORD Password123! No Default Password for PEM applications PEM_DEFAULT_PASSPHRASE P@ssPhr4s3_890@ No Default Passphrase for PEM applications PEM_KEYSTORE_PASSWORD Change1t@ No Default Password for Keystores and Truststore PEM_ADMIN_MAILADDR admin@company.com No Provide the admin email address PEM_SMTPHOST smtp.company.com No Provide the SMTP host details PEM_SMTPPORT 25 No Provide the SMTP host details PEM_DBVENDOR DB2 No Database vendor: DB2, Oracle, MSSQL PEM_DBHOST No Database hostname/ip address PEM_DBPORT No Database port PEM_DBNAME PEMDB No Database name PEM_DBUSER db2inst1 No Database user PEM_DBPASSWORD passw0rd No Database user password PEM_DBSCHEMA DB2INST1 No Database user password PEM_JMS_USERNAME No JMS Queue user PEM_JMS_PASSWORD passw0rd No JMS Queue user password PEM_JMS_KEYSTORE_PASSWORD No JMS Queue keystore password PEM_JMS_TRUSTSTORE_PASSWORD No JMS Queue truststore password PEM_SKIP_HELM false No Avoid to run helm, only generate values.yaml PEM_CM_ENABLE false No Enable/Disable PEM Community Manager <p>For all environment variables</p> <ul> <li>Role pem_std_setup_db2</li> <li>Role pem_std_deploy_db2</li> <li>Role pem_std_deploy_mq</li> </ul>"},{"location":"playbooks/deploy_ocp_sb2b/","title":"Deploy IBM Sterling B2B Integrator on OpenShift using Ansible Scripts","text":"<p>Playbook will run the last version of Sterling B2Bi, but take care of Kubernetes/Openshift version is supported</p> Sterling B2Bi OpenShift Kubernetes helm-chart 6.2.1.0 &gt;= 4.14 &gt;= 1.28 and &lt;= 1.31 3.1.0 6.2.0.4 &gt;= 4.14 &gt;= 1.27 3.0.6 6.2.0.3 &gt;= 4.14 &gt;= 1.27 3.0.5 6.2.0.2 &gt;= 4.14 and &lt;= 4.15 &gt;= 1.27 and &lt;= 1.29 3.0.4 6.2.0.1 &gt;= 4.13 and &lt;= 4.14 &gt;= 1.26 and &lt;= 1.28 3.0.1"},{"location":"playbooks/deploy_ocp_sb2b/#preparation","title":"Preparation","text":""},{"location":"playbooks/deploy_ocp_sb2b/#1-ibm-entitled-registry","title":"1. IBM Entitled Registry","text":"<p>You must have kubectl, oc, git and ansible installed in your machine</p> <p>Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key. With key export variable</p> <pre><code>export ENTITLED_REGISTRY_KEY=&lt;entitlement_key&gt;\n</code></pre>"},{"location":"playbooks/deploy_ocp_sb2b/#2-login-on-openshift","title":"2. Login on OpenShift","text":"<p>Do a login in Openshift console and run the command:</p> <pre><code>oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234\n</code></pre>"},{"location":"playbooks/deploy_ocp_sb2b/#3-cloning-ansible-ibm-sterling-from-git","title":"3. Cloning ansible-ibm-sterling from git","text":"<pre><code>git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git\n</code></pre>"},{"location":"playbooks/deploy_ocp_sb2b/#4-set-roles-path","title":"4. Set roles path","text":"<p>To run playbook the playbook</p> <pre><code>cd ansible-ibm-sterling\n\nexport ANSIBLE_CONFIG=./ansible.cfg \n</code></pre>"},{"location":"playbooks/deploy_ocp_sb2b/#deploying-sterling-b2b-integrator","title":"Deploying Sterling B2B Integrator","text":"<p>1) First you need to provide SI_INSTANCEID, this is used to define your environment. Samples: dev01, dev02, poc01, qa01, prod01</p> <pre><code>export SI_INSTANCEID=dev01\n</code></pre> <p>2) To run playbook the playbook</p> <pre><code>ansible-playbook playbooks/deploy_sb2b.yml\n</code></pre>"},{"location":"playbooks/deploy_ocp_sb2b/#deploying-sterling-b2b-integrator-older-version","title":"Deploying Sterling B2B Integrator - older version","text":"<p>1) First you need to provide SI_INSTANCEID, this is used to define your environment. Samples: dev01, dev02, poc01, qa01, prod01</p> <pre><code>export SI_INSTANCEID=dev01\n</code></pre> <p>2) (Optional) change your version: </p> <p>We always run the last version of Sterling B2Bi, but you can choose to run a different version, based on your RH OpenShift version.</p> <pre><code>export SI_VERSION=6.2.0.4\n</code></pre> <p>3) To run playbook the playbook</p> <pre><code>ansible-playbook playbooks/deploy_sb2b.yml\n</code></pre>"},{"location":"playbooks/deploy_ocp_sb2b/#deploy-sterling-b2bi-using-prebuilt-db","title":"Deploy Sterling B2Bi using prebuilt db.","text":"<p>If your using SB2Bi for a prove of concept and get the environment provided in 10 minutes, i suggest to deploy using prebuilt db.</p> <p>Tip</p> <p>You need to have a backup from a previous install, we cannot provide because of copyright</p> <p>1) Define previous environment variables</p> <pre><code>export SI_INSTANCEID=dev01\n</code></pre> <p>2) Provide your Sterling B2BI database backup</p> <pre><code>export SI_PREBUILTDB_FILE=/tmp/B2BI_6202.tar.gz\n</code></pre> <p>3) disable database setup and upgrade</p> <pre><code>export SI_DATASETUP_ENABLED=false\nexport SI_DATASETUP_UPGRADE=false\n</code></pre> <p>4) Run prebuilt playbook</p> <pre><code>ansible-playbook playbooks/deploy_sb2b_prebuiltdb.yml\n</code></pre>"},{"location":"playbooks/deploy_ocp_sb2b/#environment-variable","title":"Environment Variable","text":"<p>Environment variables for this role:</p> Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY Yes IBM Entitled Registry key SI_INSTANCEID Yes Used to define your environment SI_ACTION install No Action: install, upgrade, prebuiltdb SI_LICENSETYPE no-prod No Specify the license edition as per license agreement. Valid value is prod or non-prod for Production and Non-production respectively. Remember that this parameter is crucial for IBM Licensing and Metering Service SI_SYSTEM_PASSPHRASE passw0rd No Name of system passphrase secret if available SI_ADMIN_MAILADDR admin@company.com No Provide the admin email address SI_ADMIN_SMTPHOST smtp.company.com No Provide the SMTP host details SI_DBVENDOR DB2 No Database vendor: DB2, Oracle, MSSQL SI_DBHOST No Database hostname/ip address SI_DBPORT No Database port SI_DBNAME B2BI No Database name SI_DBUSER db2inst1 No Database user SI_DBPASSWORD passw0rd No Database user password SI_ORACLESERVICENAME false No Oracle service name, must be true when database is Oracle SI_DATASETUP_ENABLED true No Enable database setup job execution SI_DATASETUP_UPGRADE false No Upgrade an older release SI_JMS_USERNAME No JMS Queue user SI_JMS_PASSWORD passw0rd No JMS Queue user password SI_JMS_KEYSTORE_PASSWORD No JMS Queue keystore password SI_JMS_TRUSTSTORE_PASSWORD No JMS Queue truststore password SI_LIBERTY_KEYSTORE_PASSWORD changeit No Liberty keystore password SI_SKIP_HELM false No Avoid to run helm, only generate values.yaml <p>For all environment variables</p> <ul> <li>Role sb2bi_setup_db2</li> <li>Role sb2bi_deploy_db2</li> <li> <p>Role sb2bi_deploy_mq</p> </li> <li> <p>Role sb2bi_prebuiltdb_db2</p> </li> </ul>"},{"location":"playbooks/deploy_ocp_scc/","title":"Deploy IBM Sterling Control Center on OpenShift using Ansible Scripts","text":"<p>Playbook will run the last version of Sterling Control Center, but take care of Kubernetes/Openshift version is supported</p> Sterling Control Center OpenShift Kubernetes helm-chart 6.4.0.0.iFix01_2025-05-07 &gt;= 4.14 &gt;=1.27.0 4.0.6 6.4.0.0.iFix01_2025-04-04 &gt;= 4.14 &gt;=1.27.0 4.0.6 6.4.0.0_2024-12-17 &gt;= 4.14 &gt;=1.27.0 4.0.2 6.3.1.0.iFix04_2025-05-01 &gt;= 4.14 &gt;=1.27.0 3.1.15 6.3.1.0.iFix03_2024-11-04 &gt;= 4.14 &gt;=1.27.0 3.1.9"},{"location":"playbooks/deploy_ocp_scc/#preparation","title":"Preparation","text":""},{"location":"playbooks/deploy_ocp_scc/#1-ibm-entitled-registry","title":"1. IBM Entitled Registry","text":"<p>You must have kubectl, oc, git and ansible installed in your machine</p> <p>Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key. With key export variable</p> <pre><code>export ENTITLED_REGISTRY_KEY=&lt;entitlement_key&gt;\n</code></pre>"},{"location":"playbooks/deploy_ocp_scc/#2-login-on-openshift","title":"2. Login on OpenShift","text":"<p>Do a login in Openshift console and run the command:</p> <pre><code>oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234\n</code></pre>"},{"location":"playbooks/deploy_ocp_scc/#3-cloning-ansible-ibm-sterling-from-git","title":"3. Cloning ansible-ibm-sterling from git","text":"<pre><code>git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git\n</code></pre>"},{"location":"playbooks/deploy_ocp_scc/#4-set-roles-path","title":"4. Set roles path","text":"<p>To run playbook the playbook</p> <pre><code>cd ansible-ibm-sterling\n\nexport ANSIBLE_CONFIG=./ansible.cfg \n</code></pre>"},{"location":"playbooks/deploy_ocp_scc/#deploying-sterling-control-center","title":"Deploying Sterling Control Center","text":"<p>1) First you need to provide SCC_INSTANCEID, this is used to define your environment. Samples: dev01, dev02, poc01, qa01, prod01</p> <pre><code>export SCC_INSTANCEID=dev01\n</code></pre> <p>2) You must define which product to install</p> <pre><code>export SCC_PRODUCTS=CCM,CCD\n</code></pre> <p>where SCC_PRODUCTS is the product that you want to install</p> Product Description CCD Sterling Control Center Director CCM Sterling Control Center Monitor <p>3) To run the playbook</p> <pre><code>ansible-playbook playbooks/deploy_scc.yml\n</code></pre>"},{"location":"playbooks/deploy_ocp_scc/#environment-variable","title":"Environment Variable","text":"<p>Environment variables for this role:</p> Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SCC_INSTANCEID N/A Yes Instance ID for SCC application SCC_PRODUCTS '' Yes Products for SCC application (CCM,CCD; CCM; CCD) DB2_NAMESPACE N/A No Namespace for DB2 SCC_LICENSETYPE non-prod No License type for SCC application (prod or non-prod) SCC_SYSTEM_PASSPHRASE passw0rd No System passphrase for SCC application SCC_ADMIN admin No Admin username for SCC application SCC_ADMIN_PASSWORD passw0rd No Admin password for SCC application SCC_TRUSTSTORE_PASSWORD changeit No Truststore password for SCC application SCC_KEYSTORE_PASSWORD changeit No Keystore password for SCC application SCC_EMAIL_PASSWORD passw0rd No Email password for SCC application SCC_DBVENDOR N/A No Database vendor for SCC application SCC_DBHOST N/A No Database host for SCC application SCC_DBPORT N/A No Database port for SCC application SCC_DBNAME N/A No Database name for SCC application SCC_DBUSER N/A No Database user for SCC application SCC_DBPASSWORD N/A No Database password for SCC application SCC_SMTPHOST smtp.company.com No SMTP host for SCC application SCC_SMTPPORT 25 No SMTP port for SCC application SCC_EMAIL_RESPOND noreply@company.com No Email respond address for SCC application SCC_ADMIN_MAILADDR admin@company.com No Admin email address for SCC application SCC_SMTP_TLSENABLED false No SMTP TLS enabled for SCC application SCC_JMS_USERNAME N/A No JMS username for SCC application SCC_JMS_PASSWORD N/A No JMS password for SCC application SCC_JMS_KEYSTORE_PASSWORD N/A No JMS keystore password for SCC application SCC_JMS_TRUSTSTORE_PASSWORD N/A No JMS truststore password for SCC application SCC_TIMEZONE America/New_York No Timezone for SCC application <p>For all environment variables</p> <ul> <li>Role scc_deploy</li> <li>Role scc_setup_db2</li> <li>Role scc_deploy_db2</li> <li>Role scc_deploy_mq</li> </ul>"},{"location":"playbooks/deploy_ocp_seas/","title":"Deploy IBM Sterling External Authentication Server on OpenShift using Ansible Scripts","text":"<p>Playbook will run the last version of SEAS, but take care of Kubernetes/Openshift version is supported</p> SEAS OpenShift Kubernetes helm-chart 6.1.0.2.01 &gt;= 4.13 and &lt;= 4.16 &gt;=1.26.0 &lt;=1.30.0 1.5.1 6.1.0.1.01.1 &gt;= 4.13 and &lt;= 4.16 &gt;=1.26.0 &lt;=1.30.0 1.4.3 6.1.0.1.01 &gt;= 4.13 and &lt;= 4.16 &gt;=1.26.0 &lt;=1.30.0 1.4.2"},{"location":"playbooks/deploy_ocp_seas/#preparation","title":"Preparation","text":""},{"location":"playbooks/deploy_ocp_seas/#1-ibm-entitled-registry","title":"1. IBM Entitled Registry","text":"<p>You must have kubectl, oc, git and ansible installed in your machine</p> <p>Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key. With key export variable</p> <pre><code>export ENTITLED_REGISTRY_KEY=&lt;entitlement_key&gt;\n</code></pre>"},{"location":"playbooks/deploy_ocp_seas/#2-login-on-openshift","title":"2. Login on OpenShift","text":"<p>Do a login in Openshift console and run the command:</p> <pre><code>oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234\n</code></pre>"},{"location":"playbooks/deploy_ocp_seas/#3-cloning-ansible-ibm-sterling-from-git","title":"3. Cloning ansible-ibm-sterling from git","text":"<pre><code>git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git\n</code></pre>"},{"location":"playbooks/deploy_ocp_seas/#4-set-roles-path","title":"4. Set roles path","text":"<p>To run playbook the playbook</p> <pre><code>cd ansible-ibm-sterling\n\nexport ANSIBLE_CONFIG=./ansible.cfg \n</code></pre>"},{"location":"playbooks/deploy_ocp_seas/#deploying-sterling-external-authentication-server","title":"Deploying Sterling External Authentication Server","text":"<p>1) To run the playbook</p> <pre><code>ansible-playbook playbooks/deploy_seas.yml\n</code></pre>"},{"location":"playbooks/deploy_ocp_seas/#change-the-default-namespace","title":"Change the default namespace","text":"<p>1) Change namespace and run the playbook</p> <pre><code>export SEAS_NAMESPACE=sterling-seas-dev01\n\nansible-playbook playbooks/deploy_seas.yml\n</code></pre>"},{"location":"playbooks/deploy_ocp_seas/#environment-variable","title":"Environment Variable","text":"<p>Environment variables for this role:</p> Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SEAS_NAMESPACE N/A No Namespace for SEAS application SEAS_VERSION 6.1.0.0.06 No Version of SEAS application SEAS_SYS_PASSPHRASE Password123! No System passphrase for SEAS application SEAS_ADMIN_PASSWORD Password123! No Admin password for SEAS application SEAS_KEYSTORE_PASSPHRASE Change1t@ No Keystore passphrase for SEAS application SEAS_TRUSTSTOREPASSWORD Change1t@ No Truststore passphrase for SEAS application SEAS_LICENSETYPE non-prod No License type for SEAS application (prod or non-prod)"},{"location":"playbooks/deploy_ocp_ssp/","title":"Deploy IBM Sterling Secure Proxy on OpenShift using Ansible Scripts","text":"<p>Playbook will run the last version of SEAS, but take care of Kubernetes/Openshift version is supported</p> Sterling Secure Proxy OpenShift Kubernetes helm-chart 6.2.0.0.01 &gt;= 4.13 and &lt;= 4.16 &gt;=1.26.0 &lt;=1.30.0 1.5.1 6.2.0.0 &gt;= 4.13 and &lt;= 4.16 &gt;=1.26.0 &lt;=1.30.0 1.4.0 ## Preparation"},{"location":"playbooks/deploy_ocp_ssp/#1-ibm-entitled-registry","title":"1. IBM Entitled Registry","text":"<p>You must have kubectl, oc, git and ansible installed in your machine</p> <p>Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key. With key export variable</p> <pre><code>export ENTITLED_REGISTRY_KEY=&lt;entitlement_key&gt;\n</code></pre>"},{"location":"playbooks/deploy_ocp_ssp/#2-login-on-openshift","title":"2. Login on OpenShift","text":"<p>Do a login in Openshift console and run the command:</p> <pre><code>oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234\n</code></pre>"},{"location":"playbooks/deploy_ocp_ssp/#3-cloning-ansible-ibm-sterling-from-git","title":"3. Cloning ansible-ibm-sterling from git","text":"<pre><code>git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git\n</code></pre>"},{"location":"playbooks/deploy_ocp_ssp/#4-set-roles-path","title":"4. Set roles path","text":"<p>To run playbook the playbook</p> <pre><code>cd ansible-ibm-sterling\n\nexport ANSIBLE_CONFIG=./ansible.cfg \n</code></pre>"},{"location":"playbooks/deploy_ocp_ssp/#deploying-sterling-secure-proxy","title":"Deploying Sterling Secure Proxy","text":"<p>1) First you need to provide SSP_INSTANCEID, this is used to define your environment. Samples: dev01, dev02, poc01, qa01, prod01</p> <pre><code>export SSP_INSTANCEID=dev01\n</code></pre> <p>2) To run the playbook</p> <pre><code>ansible-playbook playbooks/deploy_ssp.yml\n</code></pre>"},{"location":"playbooks/deploy_ocp_ssp/#environment-variable","title":"Environment Variable","text":"<p>Environment variables for this role:</p> Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SSP_INSTANCEID N/A Yes Instance ID for SSP application SSP_VERSION 6.1.0.0.03plus No Version of SSP application SSP_LICENSE_TYPE non-prod No License type for SSP application (prod or non-prod) SSP_SYS_PASSPHRASE Passw0rd@ No System passphrase for SSP application SSP_KEYCERT_STORE_PASSPHRASE changeit No Keystore and certificate store passphrase SSP_KEYCERT_ENCRYPT_PASSPHRASE Change1t@ No Encryption passphrase for keys and certificates SSP_CUSTOM_KEYCERT_PASSPHRASE Change1t@ No Custom keystore passphrase for SSP application SSP_TIMEZONE America/New_York No Timezone for SSP application <p>For all environment variables</p> <ul> <li>Role ssp_deploy</li> <li>Role ssp_ps_deploy</li> <li>Role ssp_config</li> </ul>"},{"location":"playbooks/setup_b2b/","title":"Getting start","text":""},{"location":"playbooks/setup_b2b/#prerequisites","title":"Prerequisites","text":""},{"location":"playbooks/setup_b2b/#download-installation-files","title":"Download installation files:","text":"Product Name PartNum Filename Description <p>| IBM DB2 V11.5.x               |         | DB2S_11.5.4_MPML.tar.gz         | IBM DB2 V11.5.4 Multi-platform Multi-language| | IBM Java SDK/JRE              | M06M9ML | SB2BI_6.1.2_MP_ML_JDK.zip       | IBM Sterling B2B Integrator V6.1.2 or IBM Sterling File Gateway V6.1.2 Java SDK/JRE Multiplatform| | IBM Sterling B2B Integrator   | M06MCML | SB2BI_6.1.2_MP_ML.zip           | IBM Sterling B2B Integrator V6.1.2 for Multiplatform Multilingual| | IBM Java Unrestricted Policy  |         | unrestrictedpolicyfiles.zip     |               |</p>"},{"location":"playbooks/setup_b2b/#install-nginx","title":"Install Nginx","text":"<p>First, ensure your system is up-to-date with the latest packages. Nginx is not available in the default repositories of Red Hat-based systems. You need to install the EPEL (Extra Packages for Enterprise Linux) repository.</p> <pre><code>sudo yum update -y\n\nsudo yum install epel-release -y\n</code></pre> <p>Now you can install Nginx using the following command:</p> <pre><code>sudo yum install nginx -y\n</code></pre> <p>After installing Nginx, start the Nginx service and ensure that Nginx starts automatically at boot time, with the following command:</p> <pre><code>sudo systemctl start nginx\nsudo systemctl enable nginx\n</code></pre> <p>3) Copy download files to Web Server</p> <pre><code> cp &lt;files&gt; /usr/share/nginx/html\n</code></pre>"},{"location":"playbooks/setup_b2b/#cloning-ansible-ibm-sterling-from-git","title":"Cloning ansible-ibm-sterling from git","text":"<pre><code>git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git\n</code></pre>"},{"location":"playbooks/setup_b2b/#create-a-inventory-file","title":"Create a inventory file","text":"<p>Copy from template</p> <pre><code>cd ansible-ibm-sterling\n\ncp environments/sb2b-servers.dev.sample environments/hosts.dev\n\n</code></pre> <p>Edit and provide information for your environment, like DB2 server, Sterling Integrator node name, ...</p> <p>Provide information for you nginx server</p>"},{"location":"playbooks/setup_b2b/#running-playbooks","title":"Running playbooks","text":"<p>Install Sterling B2B (standalone)</p> <pre><code>cd ansible-ibm-sterling\n\nansible-playbook -i environments/hosts.dev -u root playbooks/setup-sb2b.yml\n</code></pre>"},{"location":"playbooks/setup_cd/","title":"Getting start","text":""},{"location":"playbooks/setup_cd/#prerequisites","title":"Prerequisites","text":""},{"location":"playbooks/setup_cd/#download-installation-files","title":"Download installation files:","text":"Product Name PartNum Filename Description IBM Connect:Direct IBM_CD_V6.2_UNIX_RedHat.Z.tar.Z IBM Connect:Direct 6.2.x"},{"location":"playbooks/setup_cd/#install-nginx","title":"Install Nginx","text":"<p>First, ensure your system is up-to-date with the latest packages. Nginx is not available in the default repositories of Red Hat-based systems. You need to install the EPEL (Extra Packages for Enterprise Linux) repository.</p> <pre><code>sudo yum update -y\n\nsudo yum install epel-release -y\n</code></pre> <p>Now you can install Nginx using the following command:</p> <pre><code>sudo yum install nginx -y\n</code></pre> <p>After installing Nginx, start the Nginx service and ensure that Nginx starts automatically at boot time, with the following command:</p> <pre><code>sudo systemctl start nginx\nsudo systemctl enable nginx\n</code></pre> <p>3) Copy download files to Web Server</p> <pre><code> cp IBM_CD_V6.2_UNIX_RedHat.Z.tar.Z /usr/share/nginx/html\n</code></pre>"},{"location":"playbooks/setup_cd/#cloning-ansible-ibm-sterling-from-git","title":"Cloning ansible-ibm-sterling from git","text":"<pre><code>git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git\n</code></pre>"},{"location":"playbooks/setup_cd/#create-a-inventory-file","title":"Create a inventory file","text":"<p>Copy from template</p> <pre><code>cd ansible-ibm-sterling\n\ncp environments/cd-servers.dev.sample environments/hosts.dev\n\n</code></pre> <p>Edit and provide information for your environment, like C:D node name and ip address.</p> <p>Provide information for you nginx server</p>"},{"location":"playbooks/setup_cd/#running-playbooks","title":"Running playbooks","text":"<p>Install Connect:Direct (standalone)</p> <pre><code>cd ansible-ibm-sterling\n\nansible-playbook -i environments/hosts.dev -u root playbooks/setup-cd.yml\n</code></pre>"},{"location":"playbooks/tools_deploy_cert_manager/","title":"Deploy Cert Manager on OpenShift using Ansible Scripts","text":"<p>Using Cert-Manager using Redhat operator</p>"},{"location":"playbooks/tools_deploy_cert_manager/#preparation","title":"Preparation","text":""},{"location":"playbooks/tools_deploy_cert_manager/#1-login-on-openshift","title":"1. Login on OpenShift","text":"<p>Do a login in Openshift console and run the command:</p> <pre><code>oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234\n</code></pre>"},{"location":"playbooks/tools_deploy_cert_manager/#2-cloning-ansible-ibm-sterling-from-git","title":"2. Cloning ansible-ibm-sterling from git","text":"<pre><code>git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git\n</code></pre>"},{"location":"playbooks/tools_deploy_cert_manager/#3-set-roles-path","title":"3. Set roles path","text":"<p>To run playbook the playbook</p> <pre><code>cd ansible-ibm-sterling\n\nexport ANSIBLE_CONFIG=./ansible.cfg \n</code></pre>"},{"location":"playbooks/tools_deploy_cert_manager/#deploy-cert-manager","title":"Deploy Cert Manager","text":""},{"location":"playbooks/tools_deploy_cert_manager/#run-the-plabook","title":"Run the Plabook","text":"<p>To run playbook the playbook</p> <pre><code>ansible-playbook playbooks/tools/certmanager.yml\n</code></pre>"},{"location":"playbooks/tools_deploy_cert_manager/#environment-variable","title":"Environment Variable","text":"<p>For all environment variables</p> <ul> <li>Role cert_manager</li> </ul>"},{"location":"playbooks/tools_deploy_cloudbeaver/","title":"Deploy Cloudbeaver on OpenShift using Ansible Scripts","text":""},{"location":"playbooks/tools_deploy_cloudbeaver/#preparation","title":"Preparation","text":""},{"location":"playbooks/tools_deploy_cloudbeaver/#1-login-on-openshift","title":"1. Login on OpenShift","text":"<p>Do a login in Openshift console and run the command:</p> <pre><code>oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234\n</code></pre>"},{"location":"playbooks/tools_deploy_cloudbeaver/#2-cloning-ansible-ibm-sterling-from-git","title":"2. Cloning ansible-ibm-sterling from git","text":"<pre><code>git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git\n</code></pre>"},{"location":"playbooks/tools_deploy_cloudbeaver/#3-set-roles-path","title":"3. Set roles path","text":"<p>To run playbook the playbook</p> <pre><code>cd ansible-ibm-sterling\n\nexport ANSIBLE_CONFIG=./ansible.cfg \n</code></pre>"},{"location":"playbooks/tools_deploy_cloudbeaver/#deploy-cloud-beaver","title":"Deploy Cloud beaver","text":""},{"location":"playbooks/tools_deploy_cloudbeaver/#1-run-the-playbook","title":"1. Run the Playbook","text":"<p>To run playbook the playbook</p> <pre><code>ansible-playbook playbooks/tools/cloudbeaver.yml\n</code></pre>"},{"location":"playbooks/tools_deploy_cloudbeaver/#environment-variable","title":"Environment Variable","text":"<p>For all environment variables</p> <ul> <li>Role cloudbeaver</li> </ul>"},{"location":"playbooks/tools_deploy_kafka/","title":"Deploy Kafka on OpenShift using Ansible Scripts","text":"<p>Using Strimzi or Redhat operator</p>"},{"location":"playbooks/tools_deploy_kafka/#preparation","title":"Preparation","text":""},{"location":"playbooks/tools_deploy_kafka/#1-login-on-openshift","title":"1. Login on OpenShift","text":"<p>Do a login in Openshift console and run the command:</p> <pre><code>oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234\n</code></pre>"},{"location":"playbooks/tools_deploy_kafka/#2-cloning-ansible-ibm-sterling-from-git","title":"2. Cloning ansible-ibm-sterling from git","text":"<pre><code>git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git\n</code></pre>"},{"location":"playbooks/tools_deploy_kafka/#3-set-roles-path","title":"3. Set roles path","text":"<p>To run playbook the playbook</p> <pre><code>cd ansible-ibm-sterling\n\nexport ANSIBLE_CONFIG=./ansible.cfg \n</code></pre>"},{"location":"playbooks/tools_deploy_kafka/#deploy-cloud-beaver","title":"Deploy Cloud beaver","text":""},{"location":"playbooks/tools_deploy_kafka/#1-run-the-playbook","title":"1. Run the Playbook","text":"<p>To run playbook the playbook</p> <pre><code>ansible-playbook playbooks/tools/kafka.yml\n</code></pre>"},{"location":"playbooks/tools_deploy_kafka/#environment-variable","title":"Environment Variable","text":"<p>For all environment variables</p> <ul> <li>Role kafka</li> </ul>"},{"location":"playbooks/tools_deploy_kowl/","title":"Deploy Kowl on OpenShift using Ansible Scripts","text":"<p>Kowl is a Web UI for Kafa</p>"},{"location":"playbooks/tools_deploy_kowl/#preparation","title":"Preparation","text":""},{"location":"playbooks/tools_deploy_kowl/#1-login-on-openshift","title":"1. Login on OpenShift","text":"<p>Do a login in Openshift console and run the command:</p> <pre><code>oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234\n</code></pre>"},{"location":"playbooks/tools_deploy_kowl/#2-cloning-ansible-ibm-sterling-from-git","title":"2. Cloning ansible-ibm-sterling from git","text":"<pre><code>git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git\n</code></pre>"},{"location":"playbooks/tools_deploy_kowl/#3-set-roles-path","title":"3. Set roles path","text":"<p>To run playbook the playbook</p> <pre><code>cd ansible-ibm-sterling\n\nexport ANSIBLE_CONFIG=./ansible.cfg \n</code></pre>"},{"location":"playbooks/tools_deploy_kowl/#deploy-cloud-beaver","title":"Deploy Cloud beaver","text":""},{"location":"playbooks/tools_deploy_kowl/#1-run-the-playbook","title":"1. Run the Playbook","text":"<p>To run playbook the playbook</p> <pre><code>ansible-playbook playbooks/tools/kowl.yml\n</code></pre>"},{"location":"playbooks/tools_deploy_kowl/#environment-variable","title":"Environment Variable","text":"<p>For all environment variables</p> <ul> <li>Role kowl</li> </ul>"},{"location":"playbooks/tools_deploy_minio/","title":"Deploy MinIO on OpenShift using Ansible Scripts","text":""},{"location":"playbooks/tools_deploy_minio/#preparation","title":"Preparation","text":""},{"location":"playbooks/tools_deploy_minio/#1-login-on-openshift","title":"1. Login on OpenShift","text":"<p>Do a login in Openshift console and run the command:</p> <pre><code>oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234\n</code></pre>"},{"location":"playbooks/tools_deploy_minio/#2-cloning-ansible-ibm-sterling-from-git","title":"2. Cloning ansible-ibm-sterling from git","text":"<pre><code>git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git\n</code></pre>"},{"location":"playbooks/tools_deploy_minio/#3-set-roles-path","title":"3. Set roles path","text":"<p>To run playbook the playbook</p> <pre><code>cd ansible-ibm-sterling\n\nexport ANSIBLE_CONFIG=./ansible.cfg \n</code></pre>"},{"location":"playbooks/tools_deploy_minio/#deploy-cloud-beaver","title":"Deploy Cloud beaver","text":""},{"location":"playbooks/tools_deploy_minio/#1-run-the-playbook","title":"1. Run the Playbook","text":"<p>To run playbook the playbook</p> <pre><code>ansible-playbook playbooks/tools/minio.yml\n</code></pre>"},{"location":"playbooks/tools_deploy_minio/#environment-variable","title":"Environment Variable","text":"<p>For all environment variables</p> <ul> <li>Role minio</li> </ul>"},{"location":"playbooks/tools_deploy_openldap/","title":"Deploy OpenLDAP on OpenShift using Ansible Scripts","text":""},{"location":"playbooks/tools_deploy_openldap/#preparation","title":"Preparation","text":""},{"location":"playbooks/tools_deploy_openldap/#1-login-on-openshift","title":"1. Login on OpenShift","text":"<p>Do a login in Openshift console and run the command:</p> <pre><code>oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234\n</code></pre>"},{"location":"playbooks/tools_deploy_openldap/#2-cloning-ansible-ibm-sterling-from-git","title":"2. Cloning ansible-ibm-sterling from git","text":"<pre><code>git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git\n</code></pre>"},{"location":"playbooks/tools_deploy_openldap/#3-set-roles-path","title":"3. Set roles path","text":"<p>To run playbook the playbook</p> <pre><code>cd ansible-ibm-sterling\n\nexport ANSIBLE_CONFIG=./ansible.cfg \n</code></pre>"},{"location":"playbooks/tools_deploy_openldap/#deploy-cloud-beaver","title":"Deploy Cloud beaver","text":""},{"location":"playbooks/tools_deploy_openldap/#1-run-the-playbook","title":"1. Run the Playbook","text":"<p>To run playbook the playbook</p> <pre><code>ansible-playbook playbooks/tools/openldap.yml\n</code></pre>"},{"location":"playbooks/tools_deploy_openldap/#environment-variable","title":"Environment Variable","text":"<p>For all environment variables</p> <ul> <li>Role openldap</li> <li>Role phpldapadmin</li> </ul>"},{"location":"roles/cd_deploy/","title":"Role cd_deploy","text":"<p>Deploy Connect:direct</p>"},{"location":"roles/cd_deploy/#role-variables","title":"Role Variables","text":"<p>Environment variables for this role:</p> Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY - Yes Entitlement registry key CD_NAMESPACE sterling-cdnode01-dev No Namespace for C:D application CD_NODENAME CDNODE01 No Specify the nodename of C:D CD_VERSION 6.3.0.3_ifix003 No Version of C:D container to deploy CD_ADMINPASSWORD passw0rd No Password for C:D Admin CD_APPUSER_PWD passw0rd No Password for C:D User CD_LOCALCERTPASSPHRASE changeit No Passphrase for local certificate CD_KEYSTOREPASSWORD changeit No Password for keystore CD_LICENSE_TYPE non-prod No License type for C:D (prod or non-prod) CD_STORAGE_CLASS - No Storage class to be used for the container CD_STORAGE_CAPACITY 1Gi No Storage capacity to be allocated to the container CD_CPU_LIMITS 500m No CPU limit for the container CD_MEM_LIMITS 2000Mi No Memory limit for the container CD_EPHEMERAL_STORAGE_LIMITS 5Gi No Ephemeral storage limit for the container CD_CPU_REQUESTS 500m No CPU request for the container CD_MEM_REQUESTS 2000Mi No Memory request for the container CD_EPHEMERAL_STORAGE_REQUESTS 3Gi No Ephemeral storage request for the container"},{"location":"roles/cdws_deploy/","title":"Role cdws_deploy","text":"<p>Deploy Connect:direct Webservices</p>"},{"location":"roles/cdws_deploy/#role-variables","title":"Role Variables","text":"<p>Environment variables for this role:</p> Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key CDWS_NAMESPACE sterling-cdws01 Yes Namespace for C:D application CDWS_VERSION 6.3.0.8_ifix000 No Version of C:D container to deploy CDWS_TRUSTSTOREPASSWORD changeit No Password for truststore CDWS_KEYSTOREPASSWORD changeit No Password for keystore CDWS_CACERT_PASSWORD passw0rd No Password for CA certificate CDWS_LICENSE_TYPE non-prod No License type for C:D application (prod or non-prod) CDWS_STORAGE_CLASS - Yes Storage class to be used for the container CDWS_STORAGE_CAPACITY 500Mi No Storage capacity to be allocated to the container CDWS_CPU_LIMITS 3000m No CPU limit for the container CDWS_MEM_LIMITS 2Gi No Memory limit for the container CDWS_CPU_REQUESTS 1500m No CPU request for the container CDWS_MEM_REQUESTS 1Gi No Memory request for the container"},{"location":"roles/cert_manager/","title":"cert_manager","text":"<p>Deploy Red Hat Certificate Manager Operator into the target OCP cluster.</p> <p>Tip</p> <p>DO NOT USE 'Community Certificate Manager', STILL NOT WORKING</p> <ul> <li>Red Hat Certificate Manager Operatos will be installed into the <code>cert-manager-operator</code> namespace and the Operand will be created in the <code>cert-manager</code> namespace.</li> <li>Community Certificate Manager Operatos will be installed into the <code>cert-manager-community-operator</code> namespace and the Operand will be created in the <code>cert-manager-community</code> namespace.</li> </ul>"},{"location":"roles/cert_manager/#prerequisites","title":"Prerequisites","text":""},{"location":"roles/cert_manager/#red-hat-certificate-manager","title":"Red Hat Certificate Manager","text":"<p>You must have already installed the Red Hat Operators CatalogSource.</p>"},{"location":"roles/cert_manager/#community-certificate-manager","title":"Community Certificate Manager","text":"<p>You must have already installed the Community Operators CatalogSource.</p>"},{"location":"roles/cert_manager/#role-variables","title":"Role Variables","text":""},{"location":"roles/cert_manager/#cert_manager_action","title":"cert_manager_action","text":"<p>Inform the role whether to perform an <code>install</code> or an <code>uninstall</code> the Certificate Manager service, action can also be set to <code>none</code> to instruct the role to take no action.</p> <ul> <li>Optional</li> <li>Environment Variable: <code>CERT_MANAGER_ACTION</code></li> <li>Default: <code>install</code></li> </ul>"},{"location":"roles/cert_manager/#cert_manager_provider","title":"cert_manager_provider","text":"<p>Choose which flavour of Certificate Manager to install; Red Hat (<code>redhat</code>) or Community (<code>community</code>)</p> <ul> <li>Optional</li> <li>Environment Variable: <code>CERT_MANAGER_PROVIDER</code></li> <li>Default: <code>community</code></li> </ul> <p>Note: Certificate Manager is a cluster-wide dependency, therefore be really careful when uninstalling it as this might be used by several applications and dependencies installed in the cluster.</p>"},{"location":"roles/cert_manager/#example-playbook","title":"Example Playbook","text":"<p>After installing the Ansible Collection you can include this role in your own custom playbooks.</p>"},{"location":"roles/cert_manager/#red-hat-certificate-manager_1","title":"Red Hat Certificate Manager","text":"<pre><code>- hosts: localhost\n  vars:\n    - cert_manager_action: install\n    - cert_manager_provider: redhat\n  roles:\n    - cert_manager\n</code></pre>"},{"location":"roles/cert_manager/#community-certificate-manager_1","title":"Community Certificate Manager","text":"<pre><code>- hosts: localhost\n  vars:\n    - cert_manager_action: install\n    - cert_manager_provider: community\n  roles:\n    - cert_manager\n</code></pre>"},{"location":"roles/cert_manager/#license","title":"License","text":"<p>EPL-2.0</p>"},{"location":"roles/cloudbeaver/","title":"Role cloudbeaver","text":"<p>Deploy Cloudbeaver to manage databases inside containers</p>"},{"location":"roles/cloudbeaver/#role-variables","title":"Role Variables","text":"Environment Variable Default Value Required Description CB_NAMESPACE cloudbeaver No Namespace for CloudBeaver CB_ADMIN cbadmin No Admin username for CloudBeaver CB_PASSWORD passw0rd No Admin password for CloudBeaver"},{"location":"roles/db2_console/","title":"Role cloudbeaver","text":"<p>Deploy DB2 console to manage databases inside containers</p>"},{"location":"roles/db2_console/#role-variables","title":"Role Variables","text":""},{"location":"roles/itx_rs_deploy/","title":"Role itx_rs_deploy","text":"<p>Deploy DB2 for ITX RS application</p>"},{"location":"roles/itx_rs_deploy/#role-variables","title":"Role Variables","text":"<p>Environment variables for this role:</p> Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key ITX_RS_NAMESPACE N/A Yes Namespace for ITX application ITX_RS_INSTANCEID N/A Yes Instance ID for ITX application ITX_RS_VERSION 10.1.2.0.20231130 No Version of ITX application ITX_RS_SYS_PASSPHRASE Passw0rd@ No System passphrase for ITX application"},{"location":"roles/itxa_deploy/","title":"Role itxa_deploy","text":"<p>Deploy ITXA application</p>"},{"location":"roles/itxa_deploy/#role-variables","title":"Role Variables","text":"<p>Environment variables for this role:</p> Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key ITXA_INSTANCEID N/A Yes Instance ID for ITXA application ITXA_VERSION 10.0.1.9-x86_64 No Version of ITXA application ITXA_ADMIN_PASSWORD passw0rd No Admin password for ITXA application ITXA_TLS_KEYSTORE_PASSWORD changeit No TLS keystore password for ITXA application ITXA_LICENSETYPE non-prod No License type for ITXA application (prod or non-prod)"},{"location":"roles/itxa_deploy_db2/","title":"Role itxa_deploy_db2","text":"<p>Deploy DB2 for ITXA application</p>"},{"location":"roles/itxa_deploy_db2/#role-variables","title":"Role Variables","text":"<p>Environment variables for this role:</p> Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key ITXA_INSTANCEID N/A Yes Instance ID for ITXA application DB2_PASSWORD passw0rd No DB2 db2inst1 password DB2_VERSION 11.5.9.0 No DB2 Version"},{"location":"roles/itxa_setup_db2/","title":"itxa_setup_db2","text":"<p>This role will perform some initial setup on the Db2 instance that is needed to prepare it for use with the ITXA.</p> <p>The role will copy a bash script (setupdb.sh) into the Db2 pod and execute it inside the container, this script will perform a number of configuration changes to the database like 'CREATE DATABASE, CREATE TABLESPACES, ...'.</p>"},{"location":"roles/itxa_setup_db2/#role-itxa_setup_db2","title":"Role itxa_setup_db2","text":"<p>Environment variables for this role:</p> Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key ITXA_INSTANCEID N/A Yes Instance ID for ITXA application"},{"location":"roles/kafka/","title":"kafka","text":"<p>Many parts of this role was based from kafka role from ibm-mas project.   Thanks David Parker (@durera)</p> <p>This role provides support to install a Kafka Cluster using Strimzi, Red Hat AMQ Streams and generate configuration that can be directly applied to IBM Sterling.</p> <p>Both Strimzi and Red Hat AMQ streams component are massively scalable, distributed, and high-performance data streaming platform based on the Apache Kafka project. Both offer a distributed backbone that allows microservices and other applications to share data with high throughput and low latency.</p> <p>As more applications move to Kubernetes and Red Hat OpenShift, it is increasingly important to be able to run the communication infrastructure on the same platform. Red Hat OpenShift, as a highly scalable platform, is a natural fit for messaging technologies such as Kafka. The AMQ streams component makes running and managing Apache Kafka OpenShift native through the use of powerful operators that simplify the deployment, configuration, management, and use of Apache Kafka on Red Hat OpenShift.</p> <p>The AMQ streams component is part of the Red Hat AMQ family, which also includes the AMQ broker, a longtime innovation leader in Java\u2122 Message Service (JMS) and polyglot messaging, as well as the AMQ interconnect router, a wide-area, peer-to-peer messaging solution. Under the covers, AMQ streams leverages Strimzi's architecture, resources and configurations.</p> <p>Note: The SB2BI license does not include entitlement for AMQ streams. The SB2BI Devops Collection supports this Kafka deployment as an example only. Therefore, we recommend the use of Strimzi for an opensource Kafka provider.</p> <p>Tip</p> <p>The role will generate a yaml file containing the definition of a Secret and KafkaCfg resource that can be used to configure the deployed cluster as the SB2BI system Kafka.</p> <p>This file can be directly applied using <code>oc apply -f $SI_CONFIG_DIR/kafkacfg-amqstreams-system.yaml</code> or used in conjunction with the role.</p>"},{"location":"roles/kafka/#role-variables","title":"Role Variables","text":""},{"location":"roles/kafka/#kafka_provider","title":"kafka_provider","text":"<p>Valid kafka providers are <code>strimzi</code> (opensource), <code>redhat</code> (installs AMQ Streams which requires a license that is not included with Sterling B2BI entitlement) - Environment Variable: <code>KAFKA_PROVIDER</code> - Default Value: <code>strimzi</code></p>"},{"location":"roles/kafka/#red-hat-amq-streams-strimzi-role-variables","title":"Red Hat AMQ Streams &amp; Strimzi Role Variables","text":""},{"location":"roles/kafka/#kafka_version","title":"kafka_version","text":"<p>The version of Kafka to deploy by the operator. Before changing the kafka_version make the version is supported by the amq-streams operator version or strimzi operator version.</p> <ul> <li>Environment Variable: <code>KAFKA_VERSION</code></li> <li>Default Value: <code>3.5.0</code> for AMQ Streams and <code>3.7.0</code> for Strimzi.</li> </ul>"},{"location":"roles/kafka/#kafka_namespace","title":"kafka_namespace","text":"<p>The namespace where the operator and Kafka cluster will be deployed.</p> <ul> <li>Environment Variable: <code>KAFKA_NAMESPACE</code></li> <li>Default Value: <code>amq-streams</code> for AMQ Streams and <code>strimzi</code> for Strimzi.</li> </ul>"},{"location":"roles/kafka/#kafka_cluster_name","title":"kafka_cluster_name","text":"<p>The name of the Kafka cluster that will be created</p> <ul> <li>Environment Variable: <code>KAFKA_CLUSTER_NAME</code></li> <li>Default Value: <code>sterling-kfk</code></li> </ul>"},{"location":"roles/kafka/#kafka_cluster_size","title":"kafka_cluster_size","text":"<p>The configuration to apply, there are two configurations available: small and large.</p> <ul> <li>Environment Variable: <code>KAFKA_CLUSTER_SIZE</code></li> <li>Default Value: <code>small</code></li> </ul>"},{"location":"roles/kafka/#kafka_storage_class","title":"kafka_storage_class","text":"<p>The name of the storage class to configure the AMQStreams operator to use for persistent storage in the Kafka cluster.</p> <ul> <li>Environment Variable: <code>KAFKA_STORAGE_CLASS</code></li> <li>Default Value: lookup supported storage classes in the cluster</li> </ul>"},{"location":"roles/kafka/#kafka_storage_size","title":"kafka_storage_size","text":"<p>The size of the storage to configure the AMQStreams operator to use for persistent storage in the Kafka cluster.</p> <ul> <li>Environment Variable: <code>KAFKA_STORAGE_SIZE</code></li> <li>Default Value: <code>100Gi</code></li> </ul>"},{"location":"roles/kafka/#zookeeper_storage_class","title":"zookeeper_storage_class","text":"<p>The name of the storage class to configure the AMQStreams operator to use for persistent storage in the Zookeeper cluster.</p> <ul> <li>Environment Variable: <code>ZOOKEEPER_STORAGE_CLASS</code></li> <li>Default Value: lookup supported storage classes in the cluster</li> </ul>"},{"location":"roles/kafka/#zookeeper_storage_size","title":"zookeeper_storage_size","text":"<p>The size of the storage to configure the AMQStreams operator to use for persistent storage in the Zookeeper cluster.</p> <ul> <li>Environment Variable: <code>ZOOKEEPER_STORAGE_SIZE</code></li> <li>Default Value: <code>10Gi</code></li> </ul>"},{"location":"roles/kafka/#kafka_user_name","title":"kafka_user_name","text":"<p>The name of the user to setup in the cluster for SB2BI.</p> <ul> <li>Environment Variable: <code>KAFKA_USER_NAME</code></li> <li>Default Value: <code>masuser</code></li> </ul>"},{"location":"roles/kafka/#kafka_user_password-supported-in-strimzi-operator-verion-0250-amq-streams-operator-version-2x","title":"kafka_user_password (supported in Strimzi operator verion 0.25.0 - amq streams operator version 2.x)","text":"<p>The password of the user to setup in the cluster for SB2BI.</p> <ul> <li>Environment Variable: <code>KAFKA_USER_PASSWORD</code></li> <li>Default Value: a randomly generated password is used if one is not specified</li> </ul>"},{"location":"roles/kafka/#si_instance_id","title":"si_instance_id","text":"<p>The instance ID of Maximo Application Suite that the KafkaCfg configuration will target.  If this or <code>si_config_dir</code> are not set then the role will not generate a KafkaCfg template.</p> <ul> <li>Environment Variable: <code>SI_INSTANCE_ID</code></li> <li>Default Value: None</li> </ul>"},{"location":"roles/kafka/#si_config_dir","title":"si_config_dir","text":"<p>Local directory to save the generated KafkaCfg resource definition.  This can be used to manually configure a SB2BI instance to connect to the Kafka cluster, or used as an input to the role. If this or <code>si_instance_id</code> are not set then the role will not generate a KafkaCfg template.</p> <ul> <li>Environment Variable: <code>SI_CONFIG_DIR</code></li> <li>Default Value: None</li> </ul>"},{"location":"roles/kafka/#custom_labels","title":"custom_labels","text":"<p>List of comma separated key=value pairs for setting custom labels on instance specific resources.</p> <ul> <li>Optional</li> <li>Environment Variable: <code>CUSTOM_LABELS</code></li> <li>Default Value: None</li> </ul>"},{"location":"roles/kafka/#si_instance_id_1","title":"si_instance_id","text":"<p>The instance ID of Maximo Application Suite that the KafkaCfg configuration will target.  If this or <code>si_config_dir</code> are not set then the role will not generate a KafkaCfg template.</p> <ul> <li>Environment Variable: <code>SI_INSTANCE_ID</code></li> <li>Default Value: None</li> </ul>"},{"location":"roles/kafka/#si_config_dir_1","title":"si_config_dir","text":"<p>Local directory to save the generated KafkaCfg resource definition.  This can be used to manually configure a SB2BI instance to connect to the Kafka cluster, or used as an input to the role. If this or <code>si_instance_id</code> are not set then the role will not generate a KafkaCfg template.</p> <ul> <li>Environment Variable: <code>SI_CONFIG_DIR</code></li> <li>Default Value: None</li> </ul>"},{"location":"roles/kafka/#custom_labels_1","title":"custom_labels","text":"<p>List of comma separated key=value pairs for setting custom labels on instance specific resources.</p> <ul> <li>Optional</li> <li>Environment Variable: <code>CUSTOM_LABELS</code></li> <li>Default Value: None</li> </ul>"},{"location":"roles/kafka/#example-playbook","title":"Example Playbook","text":"<pre><code>- hosts: localhost\n  any_errors_fatal: true\n  vars:\n    # Generate a KafkaCfg template\n    si_instance_id: masinst1\n    si_config_dir: ~/masconfig\n  roles:\n    - kafka\n</code></pre>"},{"location":"roles/kafka/#license","title":"License","text":"<p>EPL-2.0</p>"},{"location":"roles/kowl/","title":"Role kowl","text":"<p>Deploy Kowl to inspect Kafka</p>"},{"location":"roles/kowl/#role-variables","title":"Role Variables","text":"Environment Variable Default Value Required Description KAFKA_NAMESPACE sterling-kafka-strimzi Yes Namespace for Kafka KOWL_NAMESPACE sterling-phpldapadmin Yes Namespace for Kowl KAFKA_USER_NAME siuser No User"},{"location":"roles/minio/","title":"minio","text":"<p>Deploy Minio S3 storage</p>"},{"location":"roles/minio/#role-variables","title":"Role Variables","text":"Environment Variable Default Value Required Description MINIO_PROVIDER standard No Currently supported providers: standard MINIO_ACTION install No Currently supported action: install MINIO_NAMESPACE sterling-minio No Namespace for MinIO MINIO_ROOT_USER root No Root user for MinIO MINIO_ROOT_PASSWORD passw0rd No Root password for MinIO MINIO_STORAGE_SIZE 10Gi No Storage size for MinIO <p>Currently supported providers is only standard. Minio provider is in development.</p>"},{"location":"roles/openldap/","title":"OpenLDAP","text":"<p>Deploy OpenLDAP as container</p>"},{"location":"roles/openldap/#role-variables","title":"Role Variables","text":"Environment Variable Default Value Required Description OPENLDAP_NAMESPACE sterling-openldap No Namespace for OpenLDAP OPENLDAP_BASE_DN dc=company,dc=com No Base DN for OpenLDAP OPENLDAP_ADMIN_PASSW0RD passw0rd No Admin password for OpenLDAP OPENLDAP_BIND_PASSW0RD passw0rd No Bind password for OpenLDAP OPENLDAP_UNIVERSAL_PASSW0RD passw0rd No Universal password for OpenLDAP"},{"location":"roles/phpldapadmin/","title":"Role phpldapadmin","text":"<p>Deploy phpLdapAdmin to manage OpenLDAP</p>"},{"location":"roles/phpldapadmin/#role-variables","title":"Role Variables","text":"Environment Variable Default Value Required Description OPENLDAP_NAMESPACE sterling-openldap No Namespace for OpenLDAP PHPLDAPADMIN_NAMESPACE sterling-phpldapadmin No Namespace for  phpLdapAdmin OPENLDAP_ADMIN_PASSWORD passw0rd No Admin password for OpenLDAP"},{"location":"roles/sb2bi_deploy/","title":"Role sb2b_deploy","text":"<p>Deploy Sterling B2B Integrator</p>"},{"location":"roles/sb2bi_deploy/#role-variables","title":"Role Variables","text":"<p>Environment variables for this role:</p> Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY Yes IBM Entitled Registry key SI_INSTANCEID Yes Used to define your environment SI_LICENSETYPE no-prod No Specify the license edition as per license agreement. Valid value is prod or non-prod for Production and Non-production respectively. Remember that this parameter is crucial for IBM Licensing and Metering Service SI_SYSTEM_PASSPHRASE passw0rd No Name of system passphrase secret if available SI_ADMIN_MAILADDR admin@company.com No Provide the admin email address SI_ADMIN_SMTPHOST smtp.company.com No Provide the SMTP host details SI_DBVENDOR DB2 No Database vendor: DB2, Oracle, MSSQL SI_DBHOST No Database hostname/ip address SI_DBPORT No Database port SI_DBNAME B2BI No Database name SI_DBUSER db2inst1 No Database user SI_DBPASSWORD passw0rd No Database user password SI_ORACLESERVICENAME false No Oracle service name, must be true when database is Oracle SI_DATASETUP_ENABLED true No Enable database setup job execution SI_DATASETUP_UPGRADE false No Upgrade an older release SI_JMS_USERNAME No JMS Queue user SI_JMS_PASSWORD passw0rd No JMS Queue user password SI_JMS_KEYSTORE_PASSWORD No JMS Queue keystore password SI_JMS_TRUSTSTORE_PASSWORD No JMS Queue truststore password SI_LIBERTY_KEYSTORE_PASSWORD changeit No Liberty keystore password SI_SKIP_HELM false No Avoid to run helm, only generate values.yaml"},{"location":"roles/sb2bi_deploy_db2/","title":"Role sb2bi_deploy_db2","text":"<p>Deploy DB2 for Sterling B2B Integrator application</p>"},{"location":"roles/sb2bi_deploy_db2/#role-variables","title":"Role Variables","text":"<p>Environment variables for this role:</p> Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SI_INSTANCEID N/A Yes Instance ID for Sterling B2B Integrator application DB2_PASSWORD passw0rd No DB2 db2inst1 password DB2_VERSION 11.5.9.0 No DB2 Version"},{"location":"roles/sb2bi_deploy_mq/","title":"Role sb2bi_deploy_mq","text":"<p>Deploy MQ for Sterling B2Bi application</p>"},{"location":"roles/sb2bi_deploy_mq/#role-variables","title":"Role Variables","text":"<p>Environment variables for this role:</p> Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SI_INSTANCEID N/A Yes Instance ID for SB2Bi application MQ_NAME mq No Name for MQ MQ_VERSION 9.2.5.0-r3 No Version of MQ MQ_ADMIN_PASSWORD passw0rd No Admin password for MQ MQ_APP_PASSWORD passw0rd No Application password for MQ"},{"location":"roles/sb2bi_prebuiltdb_db2/","title":"Role sb2bi_prebuiltdb_db2","text":"<p>This role will restore database from a previous instance. Only to be used for Proof of Concept (PoC).</p> <p>The role will copy a bash script (restoredb.sh) into the Db2 pod and execute it inside the container, this script will perform a number of configuration changes to the database like 'CREATE DATABASE, RESTORE DATABASE, ...'.</p>"},{"location":"roles/sb2bi_prebuiltdb_db2/#role-variables","title":"Role Variables","text":"<p>Environment variables for this role:</p> Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SI_INSTANCEID N/A Yes Instance ID for SB2BI application SI_PREBUILTDB_FILE N/A Yes full path to backup file"},{"location":"roles/sb2bi_setup_db2/","title":"Role sb2bi_setup_db2","text":"<p>This role will perform some initial setup on the Db2 instance that is needed to prepare it for use with the Sterling B2B.</p> <p>The role will copy a bash script (setupdb.sh) into the Db2 pod and execute it inside the container, this script will perform a number of configuration changes to the database like 'CREATE DATABASE, CREATE TABLESPACES, ...'.</p>"},{"location":"roles/sb2bi_setup_db2/#role-variables","title":"Role Variables","text":"<p>Environment variables for this role:</p> Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SI_INSTANCEID N/A Yes Instance ID for SB2BI application"},{"location":"roles/scc_deploy/","title":"Role scc_deploy","text":"<p>Deploy IBM Sterling Control Center application</p>"},{"location":"roles/scc_deploy/#role-variables","title":"Role Variables","text":"<p>Environment variables for this role:</p> Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SCC_INSTANCEID N/A Yes Instance ID for SCC application SCC_PRODUCTS '' Yes Products for SCC application (CCM,CCD; CCM; CCD) DB2_NAMESPACE N/A No Namespace for DB2 SCC_LICENSETYPE non-prod No License type for SCC application (prod or non-prod) SCC_SYSTEM_PASSPHRASE passw0rd No System passphrase for SCC application SCC_ADMIN admin No Admin username for SCC application SCC_ADMIN_PASSWORD passw0rd No Admin password for SCC application SCC_TRUSTSTORE_PASSWORD changeit No Truststore password for SCC application SCC_KEYSTORE_PASSWORD changeit No Keystore password for SCC application SCC_EMAIL_PASSWORD passw0rd No Email password for SCC application SCC_DBVENDOR N/A No Database vendor for SCC application SCC_DBHOST N/A No Database host for SCC application SCC_DBPORT N/A No Database port for SCC application SCC_DBNAME N/A No Database name for SCC application SCC_DBUSER N/A No Database user for SCC application SCC_DBPASSWORD N/A No Database password for SCC application SCC_SMTPHOST smtp.company.com No SMTP host for SCC application SCC_SMTPPORT 25 No SMTP port for SCC application SCC_EMAIL_RESPOND noreply@company.com No Email respond address for SCC application SCC_ADMIN_MAILADDR admin@company.com No Admin email address for SCC application SCC_SMTP_TLSENABLED false No SMTP TLS enabled for SCC application SCC_JMS_USERNAME N/A No JMS username for SCC application SCC_JMS_PASSWORD N/A No JMS password for SCC application SCC_JMS_KEYSTORE_PASSWORD N/A No JMS keystore password for SCC application SCC_JMS_TRUSTSTORE_PASSWORD N/A No JMS truststore password for SCC application SCC_TIMEZONE America/New_York No Timezone for SCC application"},{"location":"roles/scc_deploy_db2/","title":"Role scc_deploy_db2","text":"<p>Deploy DB2 for Sterling Control Center</p>"},{"location":"roles/scc_deploy_db2/#role-variables","title":"Role Variables","text":"<p>Environment variables for this role:</p> Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SCC_INSTANCEID N/A Yes Instance ID for Sterling Control Center application DB2_PASSWORD passw0rd No DB2 db2inst1 password DB2_VERSION 11.5.9.0 No DB2 Version"},{"location":"roles/scc_deploy_mq/","title":"Role scc_deploy_mq","text":"<p>Deploy MQ for Sterling Control Center application</p>"},{"location":"roles/scc_deploy_mq/#role-variables","title":"Role Variables","text":"<p>Environment variables for this role:</p> Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SCC_INSTANCEID N/A Yes Instance ID for Control Center application MQ_NAME mq No Name for MQ MQ_VERSION 9.2.5.0-r3 No Version of MQ MQ_ADMIN_PASSWORD passw0rd No Admin password for MQ MQ_APP_PASSWORD passw0rd No Application password for MQ"},{"location":"roles/scc_setup_db2/","title":"scc_setup_db2","text":"<p>This role will perform some initial setup on the Db2 instance that is needed to prepare it for use with the Sterling Control Center Monitor/Director.</p> <p>The role will copy a bash script (setupdb.sh) into the Db2 pod and execute it inside the container, this script will perform a number of configuration changes to the database like 'CREATE DATABASE, CREATE TABLESPACES, ...'.</p>"},{"location":"roles/scc_setup_db2/#role-variables","title":"Role Variables","text":"<p>Environment variables for this role:</p> Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SCC_INSTANCEID N/A Yes Instance ID for Control Center application"},{"location":"roles/seas_deploy/","title":"Role seas_deploy","text":"<p>Deploy Sterling External Authentication application</p>"},{"location":"roles/seas_deploy/#role-variables","title":"Role Variables","text":"<p>Environment variables for this role:</p> Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SEAS_NAMESPACE N/A Yes Namespace for SEAS application SEAS_VERSION 6.1.0.0.06 No Version of SEAS application SEAS_SYS_PASSPHRASE Passw0rd@ No System passphrase for SEAS application SEAS_ADMIN_PASSWORD Passw0rd@ No Admin password for SEAS application SEAS_KEYSTORE_PASSPHRASE Change1t@ No Keystore passphrase for SEAS application SEAS_TRUSTSTOREPASSWORD Change1t@ No Truststore passphrase for SEAS application SEAS_LICENSETYPE non-prod No License type for SEAS application (prod or non-prod)"},{"location":"roles/ssp_cm_deploy/","title":"Role ssp_cm_deploy","text":"<p>Deploy Sterling Secure Proxy Configuration Manager application</p>"},{"location":"roles/ssp_cm_deploy/#role-variables","title":"Role Variables","text":"<p>Environment variables for this role:</p> Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SSP_INSTANCEID N/A Yes Instance ID for SSP CM application SSP_VERSION 6.1.0.0.03plus No Version of SSP CM application SSP_LICENSE_TYPE non-prod No License type for SSP CM application (prod or non-prod) SSP_SYS_PASSPHRASE Passw0rd@ No System passphrase for SSP CM application SSP_ADMIN_PASSWORD Passw0rd@ No Admin password for SSP CM application SSP_KEYCERT_STORE_PASSPHRASE changeit No Keystore and certificate store passphrase SSP_KEYCERT_ENCRYPT_PASSPHRASE Change1t@ No Encryption passphrase for keys and certificates SSP_CUSTOM_KEYCERT_PASSPHRASE Change1t@ No Custom keystore passphrase for SSP CM SSP_COMMONCERT_PASSWORD Passw0rd@ No Password for common certificate SSP_ENGCERT_PASSWORD Passw0rd@ No Password for engine certificate SSP_CMCLIENTCERT_PASSWORD Passw0rd@ No Password for CM client certificate SSP_CMCERT_PASSWORD Passw0rd@ No Password for CM certificate SSP_CMSERVERCERT_PASSWORD Passw0rd@ No Password for CM server certificate SSP_WEBCERT_PASSWORD Passw0rd@ No Password for web certificate SSP_EXPORTEDCERT_PASSWORD Passw0rd@ No Password for exported certificate"},{"location":"roles/ssp_config/","title":"Role ssp_config","text":"<p>Configure Sterling Secure Proxy Server application using REST API</p>"},{"location":"roles/ssp_config/#role-variables","title":"Role Variables","text":"<p>Environment variables for this role:</p> Environment Variable Default Value Required Description SSP_INSTANCEID N/A Yes Instance ID for SSP CM application SSP_ADMIN_PASSWORD Passw0rd@ No Admin password for SSP CM application"},{"location":"roles/ssp_deploy/","title":"Role ssp_deploy","text":"<p>Deploy Sterling Secure Proxy Engine application</p>"},{"location":"roles/ssp_deploy/#role-variables","title":"Role Variables","text":"<p>Environment variables for this role:</p> Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SSP_INSTANCEID N/A Yes Instance ID for SSP application SSP_VERSION 6.1.0.0.03plus No Version of SSP application SSP_LICENSE_TYPE non-prod No License type for SSP application (prod or non-prod) SSP_SYS_PASSPHRASE Passw0rd@ No System passphrase for SSP application SSP_KEYCERT_STORE_PASSPHRASE changeit No Keystore and certificate store passphrase SSP_KEYCERT_ENCRYPT_PASSPHRASE Change1t@ No Encryption passphrase for keys and certificates SSP_CUSTOM_KEYCERT_PASSPHRASE Change1t@ No Custom keystore passphrase for SSP application SSP_TIMEZONE America/New_York No Timezone for SSP application"},{"location":"roles/ssp_ps_deploy/","title":"Role ssp_ps_deploy","text":"<p>Deploy Sterling Secure Proxy Perimeter Server application</p>"},{"location":"roles/ssp_ps_deploy/#role-variables","title":"Role Variables","text":"<p>Environment variables for this role:</p> Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SSP_INSTANCEID N/A Yes Instance ID for SSP application SSP_VERSION 6.1.0.0.03plus No Version of SSP application SSP_LICENSETYPE non-prod No License type for SSP application (prod or non-prod)"}]}